name: deploy

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'
  push:
    branches:
      - "issue/*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Make application-dev.yml for Owner API
      run: |
          cd spring-labs/infrastructure/src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.DEV }}" > ./application-dev.yml
      shell: bash

    - name: Build and Deploy Owner API
      run: |
          chmod +x ./gradlew
          ./gradlew clean :spring-labs:infrastructure:build
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/woojjam-infrastructure-server spring-labs/infrastructure
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/woojjam-infrastructure-server

    - name: Deploy to Infrastructure Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_INSTANCE_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }}
        script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/woojjam-infrastructure-server
            sudo docker stop woojjam-infrastructure-server
            sudo docker rm woojjam-infrastructure-server
            sudo docker run --name woojjam-infrastructure-server -d -p 8000:8000 -e TZ=Asia/Seoul ${{ secrets.DOCKERHUB_USERNAME }}/woojjam-infrastructure-server
            sudo docker image prune -f
